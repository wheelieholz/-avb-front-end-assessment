{"version":3,"sources":["components/ApiComponent.js","components/Header.js","components/CommentBody.js","components/CommentModal.js","store/api.js","app/index.js","store/slices/index.js","store/index.js","reportWebVitals.js","index.js","store/slices/view.js"],"names":["ApiComponent","useState","posts","setPost","useEffect","axios","get","then","response","data","Box","sx","flexGrow","Grid","container","spacing","item","xs","Item","List","ListItem","variant","map","post","ListItemAvatar","Avatar","stringAvatar","email","ListItemText","primary","secondary","body","Divider","component","useStyles","makeStyles","theme","root","title","Header","classes","dispatch","useDispatch","AppBar","position","className","Toolbar","Typography","Button","color","onClick","openCommentsModal","CommentBody","newUpdatedComments","mockCommentsTop3Sorted","reduce","acc","name","top3","Object","entries","sort","a","b","slice","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","TableBody","row","border","align","float","mockComment","comment","style","top","left","transform","width","bgcolor","boxShadow","p","CommentModal","setUpdatedComments","isOpen","useSelector","getViewCommentsModalOpen","setName","message","setMessage","handleChange","event","field","target","value","Modal","open","onClose","closeCommentsModal","id","Stack","direction","TextField","onChange","e","label","multiline","maxRows","commentObj","length","newArray","push","console","log","mockComments","stringToColor","string","i","hash","charCodeAt","toString","substr","indexOf","children","split","styled","typography","body2","padding","textAlign","palette","text","App","updatedComments","rootReducer","combineReducers","viewName","viewReducer","store","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootEl","document","getElementById","require","default","wrappedApp","StrictMode","ReactDOM","hydrate","render","viewSlice","createSlice","initialState","commentsModalOpen","reducers","state","createSelector","actions"],"mappings":"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","file":"static/js/main.f060e633.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\n\nimport { stringAvatar } from \"app/index.js\";\nimport { Item } from \"app/index.js\";\n\nconst baseURL = \"https://jsonplaceholder.typicode.com/comments?_limit=10\";\n\nexport default function ApiComponent() {\n  const [posts, setPost] = useState(null);\n\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setPost(response.data);\n    });\n  }, []);\n\n  if (!posts) return null;\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Item>\n            <List>\n              <ListItem variant=\"body2\">\n                <h1>\n                  Comments from API call:\n                  https://jsonplaceholder.typicode.com/comments\n                </h1>\n              </ListItem>\n              {posts.map((post) => {\n                return (\n                  <>\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar {...stringAvatar(post.email)} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={post.email}\n                        secondary={post.body}\n                      />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </>\n                );\n              })}\n            </List>\n          </Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { openCommentsModal } from \"store/slices/view\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const handleOpen = () => dispatch(openCommentsModal());\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Commentor\n        </Typography>\n        <Button color=\"inherit\" onClick={handleOpen}>\n          Add Comment\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Box from \"@mui/material/Box\";\nimport Divider from \"@mui/material/Divider\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nimport { stringAvatar } from \"app/index.js\";\nimport { Item } from \"app/index.js\";\n\nconst CommentBody = ({ newUpdatedComments }) => {\n  //First, sort mockComments Array by frequency of posts\n  const mockCommentsTop3Sorted = newUpdatedComments.reduce((acc, item) => {\n    if (!acc[item.name]) {\n      acc[item.name] = 0;\n    }\n    acc[item.name]++;\n    return acc;\n  }, {});\n\n  //Filtered Array for Top 3 Commentors\n  const top3 = Object.entries(mockCommentsTop3Sorted)\n    .sort((a, b) => b[1] - a[1])\n    .slice(0, 3);\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Item>\n            <List>\n              <ListItem>\n                <h1>G.O.A.T. Contributors</h1>\n              </ListItem>\n            </List>\n            <TableContainer component={Paper}>\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Commentors</TableCell>\n                    <TableCell>Number of Comments</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {top3.map((row) => (\n                    <TableRow\n                      key={row.name}\n                      sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                    >\n                      <TableCell align=\"left\">\n                        <ListItemAvatar sx={{ float: \"left\" }}>\n                          <Avatar {...stringAvatar(row[0])} />\n                        </ListItemAvatar>\n                        {row[0]}\n                      </TableCell>\n                      <TableCell>{row[1]}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Item>\n          <Item>\n            <List>\n              <ListItem variant=\"body2\">\n                <h1>Comments from [mockComments] api.js</h1>\n              </ListItem>\n              {newUpdatedComments.map((mockComment) => {\n                return (\n                  <>\n                    <ListItem>\n                      <ListItemAvatar>\n                        <Avatar {...stringAvatar(mockComment.name)} />\n                      </ListItemAvatar>\n                      <ListItemText\n                        primary={mockComment.name}\n                        secondary={mockComment.comment}\n                      />\n                    </ListItem>\n                    <Divider variant=\"inset\" component=\"li\" />\n                  </>\n                );\n              })}\n            </List>\n          </Item>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default CommentBody;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Stack from \"@mui/material/Stack\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport {\n  closeCommentsModal,\n  getViewCommentsModalOpen,\n} from \"store/slices/view\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n};\n\nconst CommentModal = ({ setUpdatedComments, newUpdatedComments }) => {\n  const dispatch = useDispatch();\n  const isOpen = useSelector(getViewCommentsModalOpen);\n  const handleClose = () => dispatch(closeCommentsModal());\n\n  const [name, setName] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = (event, field) => {\n    if (field === \"name\") {\n      setName(event.target.value);\n    } else {\n      setMessage(event.target.value);\n    }\n  };\n\n  const handleClick = (event) => {\n    const commentObj = {\n      id: newUpdatedComments.length + 1,\n      name,\n      comment: message,\n    };\n    const newArray = [...newUpdatedComments];\n    newArray.push(commentObj);\n    setUpdatedComments(newArray);\n    console.log(newArray);\n  };\n\n  return (\n    <Modal\n      open={isOpen}\n      onClose={handleClose}\n      aria-labelledby=\"simple-modal-title\"\n      aria-describedby=\"simple-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"simple-modal-title\" variant=\"h6\" component=\"h2\">\n          <h4>New comment</h4>\n        </Typography>\n        <Stack spacing={5} direction=\"column\">\n          <TextField\n            name=\"name\"\n            id=\"name\"\n            onChange={(e) => {\n              const field = \"name\";\n              handleChange(e, field);\n            }}\n            label=\"Name\"\n            variant=\"standard\"\n          />\n          <TextField\n            name=\"comment\"\n            id=\"comment\"\n            onChange={(e) => {\n              const field = \"comment\";\n              handleChange(e, field);\n            }}\n            label=\"Comment\"\n            multiline\n            maxRows={4}\n            variant=\"standard\"\n          />\n          <Button variant=\"contained\" onClick={handleClick}>\n            Add Comment\n          </Button>\n        </Stack>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default CommentModal;\n","/// mock data as if it came from api\n\nexport const mockComments = [\n  {\n    id: 1,\n    name: \"Eliseo Gardner\",\n    comment:\n      \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\",\n  },\n  {\n    id: 2,\n    name: \"Jayne Kuhic\",\n    comment:\n      \"est natus enim nihil est dolore omnis voluptatem numquam\\net omnis occaecati quod ullam at\\nvoluptatem error expedita pariatur\\nnihil sint nostrum voluptatem reiciendis et\",\n  },\n  {\n    id: 3,\n    name: \"Nikita Garfield\",\n    comment:\n      \"quia molestiae reprehenderit quasi aspernatur\\naut expedita occaecati aliquam eveniet laudantium\\nomnis quibusdam delectus saepe quia accusamus maiores nam est\\ncum et ducimus et vero voluptates excepturi deleniti ratione\",\n  },\n  {\n    id: 4,\n    name: \"Lew Alysha\",\n    comment:\n      \"non et atque\\noccaecati deserunt quas accusantium unde odit nobis qui voluptatem\\nquia voluptas consequuntur itaque dolor\\net qui rerum deleniti ut occaecati\",\n  },\n  {\n    id: 5,\n    name: \"Hayden Althea\",\n    comment:\n      \"harum non quasi et ratione\\ntempore iure ex voluptates in ratione\\nharum architecto fugit inventore cupiditate\\nvoluptates magni quo et\",\n  },\n  {\n    id: 6,\n    name: \"Eliseo Gardner\",\n    comment:\n      \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\",\n  },\n  {\n    id: 7,\n    name: \"Eliseo Gardner\",\n    comment:\n      \"laudantium enim quasi est quidem magnam voluptate ipsam eos\\ntempora quo necessitatibus\\ndolor quam autem quasi\\nreiciendis et nam sapiente accusantium\",\n  },\n  {\n    id: 8,\n    name: \"Jayne Kuhic\",\n    comment:\n      \"est natus enim nihil est dolore omnis voluptatem numquam\\net omnis occaecati quod ullam at\\nvoluptatem error expedita pariatur\\nnihil sint nostrum voluptatem reiciendis et\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\n\nimport \"app/App.css\";\nimport ApiComponent from \"components/ApiComponent\";\nimport Header from \"components/Header\";\nimport CommentBody from \"components/CommentBody\";\nimport CommentModal from \"components/CommentModal\";\n\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport { mockComments } from \"store/api.js\";\n\n//Creates Neato Avatar\nexport function stringToColor(string) {\n  let hash = 0;\n  let i;\n\n  /* eslint-disable no-bitwise */\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.substr(-2);\n  }\n  /* eslint-enable no-bitwise */\n\n  return color;\n}\n\nexport function stringAvatar(name) {\n  //Check if user enters complete name, if not assign the last name as 'L'\n  if (name.indexOf(\" \") === -1) {\n    name = name + \" L\";\n  }\n\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`,\n  };\n}\n\nexport const Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nfunction App() {\n  const [updatedComments, setUpdatedComments] = useState([...mockComments]);\n  useEffect(() => {}, []);\n\n  return (\n    <>\n      <Header />\n      <CommentModal\n        setUpdatedComments={setUpdatedComments}\n        newUpdatedComments={updatedComments}\n      />\n      <div className=\"App-header\">\n        <CommentBody newUpdatedComments={updatedComments} />\n        <ApiComponent />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport viewReducer, { name as viewName } from \"store/slices/view\";\n\nconst rootReducer = combineReducers({\n  [viewName]: viewReducer,\n});\n\nexport default rootReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport reducer from \"store/slices\";\n\nconst store = configureStore({\n  reducer,\n});\n\nif (module.hot) {\n  module.hot.accept(\"store/slices\", () => {\n    const reducers = require(\"store/slices\").default;\n\n    store.replaceReducers(reducers);\n  });\n}\n\nexport default store;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"index.css\";\nimport store from \"store\";\nimport reportWebVitals from \"reportWebVitals\";\n\nconst rootEl = document.getElementById(\"root\");\n\n// allow for hot module replacement\nconst render = () => {\n  const App = require(\"app\").default;\n\n  const wrappedApp = (\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  );\n\n  ReactDOM.hydrate(wrappedApp, rootEl);\n};\n\nrender();\nif (module.hot) {\n  module.hot.accept(\"app\", render);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { createSlice, createSelector } from \"@reduxjs/toolkit\";\n\nexport const name = \"view\";\nconst initialState = {\n  commentsModalOpen: false,\n};\n\nconst viewSlice = createSlice({\n  name,\n  initialState,\n  reducers: {\n    openCommentsModal(state) {\n      state.commentsModalOpen = true;\n    },\n    closeCommentsModal(state) {\n      state.commentsModalOpen = false;\n    },\n  },\n});\n\nconst getSlice = (state) => state[name] || {};\n\nexport const getViewCommentsModalOpen = createSelector(\n  getSlice,\n  (slice) => slice.commentsModalOpen\n);\n\nexport const { openCommentsModal, closeCommentsModal } = viewSlice.actions;\nexport default viewSlice.reducer;\n"],"sourceRoot":""}